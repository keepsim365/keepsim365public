def get_queue_id_by_name(instance_id, queue_name):
    try:
        paginator = client.get_paginator('list_queues')
        page_iterator = paginator.paginate(
            InstanceId=instance_id
        )
        for page in page_iterator:
            for queue in page['QueueSummaryList']:
                if queue['Name'] == queue_name:
                    return queue['Id']
        print(f"Queue '{queue_name}' not found.")
        return None
    except Exception as e:
        print(f"Error fetching queues: {str(e)}")
        return None

def get_queue_details(instance_id, queue_id):
    try:
        response = client.describe_queue(
            InstanceId=instance_id,
            QueueId=queue_id
        )
        return response['Queue']
    except Exception as e:
        print(f"Error describing queue {queue_id}: {str(e)}")
        return None

def get_hours_of_operation(instance_id, hours_of_operation_id):
    try:
        response = client.describe_hours_of_operation(
            InstanceId=instance_id,
            HoursOfOperationId=hours_of_operation_id
        )
        return response['HoursOfOperation']
    except Exception as e:
        print(f"Error describing hours of operation {hours_of_operation_id}: {str(e)}")
        return None

def read_queue_names_from_csv(filename):
    try:
        with open(filename, mode='r', newline='') as file:
            reader = csv.reader(file)
            queue_names = []
            for row in reader:
                for queue_name in row:
                    queue_names.append(queue_name.strip())
            return queue_names
    except Exception as e:
        print(f"Error reading input CSV: {str(e)}")
        return []

def write_to_csv(data, filename):
    # Write the data to a CSV file
    try:
        with open(filename, mode='w', newline='', encoding='utf-8') as file:
            fieldnames = ['QueueName', 'QueueId', 'HoursOfOperationName', 'HoursOfOperationId', 'TimeZone', 'HoursConfig']
            writer = csv.DictWriter(file, fieldnames=fieldnames)
            writer.writeheader()
            for entry in data:
                writer.writerow(entry)
            print(f"Data successfully written to {filename}")
    except Exception as e:
        print(f"Error writing to CSV: {str(e)}")

def main():
    # Read queue names from input.csv
    queue_names = read_queue_names_from_csv(input_csv)

    if not queue_names:
        print("No queue names found in input.csv or an error occurred.")
        return

    output_data = []

    for queue_name in queue_names:
        # Get the Queue ID by name
        queue_id = get_queue_id_by_name(instance_id, queue_name)
        if queue_id:
            print(f"Queue ID for '{queue_name}': {queue_id}")
            # Get queue details
            queue_details = get_queue_details(instance_id, queue_id)
            if queue_details:
                hours_of_operation_id = queue_details.get('HoursOfOperationId')
                if hours_of_operation_id:
                    # Get hours of operation details
                    hours_of_operation = get_hours_of_operation(instance_id, hours_of_operation_id)
                    if hours_of_operation:
                        # Serialize the hours config
                        hours_config_str = str(hours_of_operation['Config'])
                        output_data.append({
                            'QueueName': queue_details['Name'],
                            'QueueId': queue_details['QueueId'],
                            'HoursOfOperationName': hours_of_operation['Name'],
                            'HoursOfOperationId': hours_of_operation['HoursOfOperationId'],
                            'TimeZone': hours_of_operation['TimeZone'],
                            'HoursConfig': hours_config_str
                        })
                    else:
                        output_data.append({
                            'QueueName': queue_details['Name'],
                            'QueueId': queue_details['QueueId'],
                            'HoursOfOperationName': '',
                            'HoursOfOperationId': '',
                            'TimeZone': '',
                            'HoursConfig': ''
                        })
                else:
                    output_data.append({
                        'QueueName': queue_details['Name'],
                        'QueueId': queue_details['QueueId'],
                        'HoursOfOperationName': '',
                        'HoursOfOperationId': '',
                        'TimeZone': '',
                        'HoursConfig': ''
                    })
            else:
                print(f"Could not get details for queue '{queue_name}'.")
        else:
            print(f"Queue '{queue_name}' not found.")

    # Write to CSV
    if output_data:
        write_to_csv(output_data, output_csv)
    else:
        print("No data to write to output CSV.")

if __name__ == "__main__":
    main()
